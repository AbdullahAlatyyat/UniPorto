@model UniPortoWebsite.EF.Experiance

<div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">@Html.Label("Edit Experiance")</h4>
        </div>
        @using (Ajax.BeginForm("EditExperiance", "PrivateProfile", new AjaxOptions { HttpMethod = "POST", OnSuccess = "EditExperianceCallback()" }))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Finish, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Finish, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Finish, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.profileId)


                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.Id)

                <div class="modal-footer">
                    <button type="submit" class="btn btn-default">Create</button>

                    <button type="button" id="@Model.Id" class="btn btn-danger" onclick="removeExp(this)">Remove</button>
                </div>
        }
    </div>

</div>
<script>
    function EditExperianceCallback() {
        window.location.reload();
    }

    function removeExp(data) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("RemoveExperiance", "PrivateProfile")',
            data: { experianceId: data.id },
            success: function (success) {
                if (success == true) {
                    EditExperianceCallback();
                }
            },
            error: function (error) {
                alert("Error");

            }
        });
    }
</script>