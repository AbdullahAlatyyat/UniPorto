@model UniPortoWebsite.EF.ProfileStudyInfo


    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@Html.Label("Edit Study Info")</h4>
            </div>
            <div class="modal-body">

              @using (Ajax.BeginForm("EditStudyInfo", "PrivateProfile", new AjaxOptions { HttpMethod = "POST", OnSuccess = "EditStudyCallback()" }))
              {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.School, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.School, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.School, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Finish, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Finish, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Finish, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Detalis, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Detalis, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Detalis, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.StudyLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StudyLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StudyLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                                <input type="button" id="@Model.Id" value="Remove" onclick="RemoveStudy(this)" class="btn btn-danger" />
                                @Html.HiddenFor(p=>p.ProfileId)
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
<script>
    function EditStudyCallback()
    {
        window.location.reload();
    }
    
    function RemoveStudy(data) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("RemoveStudyInfo", "PrivateProfile")',
            data: { studyInfoId: data.id },
            success: function (success) {
                if (success == true) {
                    EditStudyCallback();
                }
            },
            error: function (error) {
                alert("Error");

            }
        });
    }
</script>